#include "Navigation.nxc"

//INCOMING COMMANDS FROM MINDSQUALLS
#define INCOMING_MOVE_TO_POS 0

//OUTGOING COMMANDS TO BE RECEIVED BY MINDSQUALLS
#define OUTGOING_WHERE_AM_I 0
#define OUTGOING_I_AM_THERE 1

//MAILBOXES TO BE USED FOR INCOMING AND OUTGOING COMMANDS
#define INBOX           1
#define OUTBOX          0

typedef unsigned char uchar;

// memcpy DOES NOT work...
float stringToFloat(string str)
{
    float output;
    memcpy(output, str, 4);
    return output;
}

//Sends command to MSq when current destination has been reached
void IAmThere() {
     string msg = NumToStr(OUTGOING_I_AM_THERE);
     SendMessage(OUTBOX, msg);
     
     ClearScreen();
     TextOut(0, LCD_LINE1, "Destination");
     TextOut(2, LCD_LINE2, "reached");
}//end function IAmThere

//Requests current location from MSq
string WhereAmI() {
     string msg = NumToStr(OUTGOING_WHERE_AM_I);
     SendMessage(OUTBOX, msg);

     string in = "";
     string cmd = "";
     byte cmdType;
     
     //Checks for reply, when received, it is returned
     while(true) {
         ReceiveRemoteString(INBOX, true, in);
         if (StrLen(in) > 0) {
            cmd = SubStr(in, 0, 1);
            cmdType = StrToNum(cmd);
            if (cmdType == OUTGOING_WHERE_AM_I) {
               string x = SubStr(in, 1, 8);
               string y = SubStr(in, 9, 8);
               string angle = SubStr(in, 17, 8);
               
               ClearScreen();
               TextOut(0, LCD_LINE1, "I am at:");
               TextOut(2, LCD_LINE2, "x: " + x);
               TextOut(2, LCD_LINE3, "y: " + y);
               TextOut(2, LCD_LINE4, "angle: " + angle);
               return SubStr(in, 1, 24);
            }//end if cmdtype
         }//end if strlen in
     }//end while true
}//end function WhereAmI

task main(){
     // Don't forget this!
     InitSpeedFromPosLUT();

     // Setup for later use
     string in = "";
     string cmd = "";
     string args = "";
     byte cmdType;

     // clear mailboxes
     in = "...";
     while(StrLen(in) > 0) {
         ReceiveRemoteString(INBOX, true, in);
     }
     in = "...";
     while(StrLen(in) > 0) {
         ReceiveRemoteString(OUTBOX, true, in);
     }

     in = "";
     
     while(true){
          //Check inbox for new commands
          ReceiveRemoteString(INBOX, true, in);
          
          //If there is a command, convert to int and do switch
          //  else reset loop
          if (StrLen(in) > 0){
             cmd = SubStr(in, 0, 1);
             cmdType = StrToNum(cmd);
             args = SubStr(in, 1, StrLen(in)-1);
             
             switch(cmdType){
                 case INCOMING_MOVE_TO_POS:
                 //Placeholder for command "goto"
                 string x = SubStr(in, 1, 8);
                 string y = SubStr(in, 9, 8);
                 
                 ClearScreen();
                 TextOut(0, LCD_LINE1, "Going to:");
                 TextOut(2, LCD_LINE2, "x:" + x);
                 TextOut(2, LCD_LINE3, "y:" + y);
                 break;
             }//end switch cmdtype
             
             in = "";
             args = "";
          }//end if strlen in
          
          if (ButtonPressed(BTNCENTER, false)) {
            // release all motors
            MotorOff(OUT_A);
            MotorOff(OUT_B);
            MotorOff(OUT_C);
            PlayTone(440, 500);
            Wait(100);

            // release all motors again
            MotorOff(OUT_A);
            MotorOff(OUT_B);
            MotorOff(OUT_C);

            TextOut(5,LCD_LINE7, "EMERGENCY STOP    ", false);
            TextOut(2,LCD_LINE8, "Restart program!  ", false);
            Wait(2500);
            StopAllTasks();
          }//end if buttenpressed
     }//end while true
}//end task main
