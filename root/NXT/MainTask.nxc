#include "Navigation.nxc"

//INCOMING COMMANDS FROM MINDSQUALLS
#define INCOMING_MOVE_TO_POS 0

//OUTGOING COMMANDS TO BE RECEIVED BY MINDSQUALLS
#define OUTGOING_WHERE_AM_I "a"
#define OUTGOING_I_AM_THERE "b"

//MAILBOXES TO BE USED FOR INCOMING AND OUTGOING COMMANDS
#define INBOX           1
#define OUTBOX          0

void IAmThere() {
     string msg = OUTGOING_I_AM_THERE;
     SendMessage(OUTBOX, msg);
}

string WhereAmI() {
     string msg = OUTGOING_WHERE_AM_I;
     SendMessage(OUTBOX, msg);
     
     string in = "";
     string cmd = "";
     
     while(true) {
         ReceiveRemoteString(INBOX, true, in);
         if (StrLen(in) > 0) {
            cmd = SubStr(in, 0, 1);
            if (cmd == OUTGOING_WHERE_AM_I) {
               return SubStr(in, 1, StrLen(in)-1);
            }
         }
     }
}

task main(){
     // Don't forget this!
     InitSpeedFromPosLUT();

     string in = "";
     string cmd = "";
     string args = "";
     byte cmdType;
     
     while(true){
          ReceiveRemoteString(INBOX, true, in);
          if (StrLen(in) > 0){
             cmd = SubStr(in, 0, 1);
             cmdType = StrToNum(cmd);
             args = SubStr(in, 1, StrLen(in)-1);
             
             switch(cmdType){
                 case INCOMING_MOVE_TO_POS:
                 //Placeholder for command "goto"
                 TextOut(0, LCD_LINE1, args);
                 break;
             }
             
             in = "";
             args = "";
          }
          
          if (ButtonPressed(BTNCENTER, false)) {
            // release all motors
            MotorOff(OUT_A);
            MotorOff(OUT_B);
            MotorOff(OUT_C);
            PlayTone(440, 500);
            Wait(100);

            // release all motors again
            MotorOff(OUT_A);
            MotorOff(OUT_B);
            MotorOff(OUT_C);

            TextOut(5,LCD_LINE7, "EMERGENCY STOP    ", false);
            TextOut(2,LCD_LINE8, "Restart program!  ", false);
            Wait(2500);
            StopAllTasks();
        }
     }
}
